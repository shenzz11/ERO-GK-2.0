-- Create main GUI
local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Name = "Shenzzz"
gui.DisplayOrder = 999
gui.Parent = game:GetService("CoreGui")

-- UI Script
local uiScript = [[
SysBroker.Name = "SysBroker"
SysBroker.Parent = game.CoreGui
SysBroker.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Background.Name = "Background"
Background.Parent = SysBroker
Background.AnchorPoint = Vector2.new(0.5, 0.5)
Background.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Background.BorderColor3 = Color3.fromRGB(0, 255, 255)
Background.Position = UDim2.new(0.5, 0, 0.5, 0)
Background.Size = UDim2.new(0, 500, 0, 350)
Background.ZIndex = 9
Background.Image = "rbxassetid://159991693"
Background.ImageColor3 = Color3.fromRGB(0, 255, 255)
Background.ImageTransparency = 0.600
Background.ScaleType = Enum.ScaleType.Tile
Background.SliceCenter = Rect.new(0, 256, 0, 256)
Background.TileSize = UDim2.new(0, 30, 0, 30)
Background.Active = true
Background.Draggable = true

TitleBarLabel.Name = "TitleBarLabel"
TitleBarLabel.Parent = Background
TitleBarLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TitleBarLabel.BackgroundTransparency = 0.250
TitleBarLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TitleBarLabel.BorderSizePixel = 0
TitleBarLabel.Size = UDim2.new(1, 0, 0, 30)
TitleBarLabel.Font = Enum.Font.Unknown
TitleBarLabel.Text = "____/SYSTEMBROKEN\\___"
TitleBarLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
TitleBarLabel.TextScaled = true
TitleBarLabel.TextSize = 14.000
TitleBarLabel.TextWrapped = true
TitleBarLabel.TextXAlignment = Enum.TextXAlignment.Left
]]

local success, errorMsg = pcall(function()
    loadstring(uiScript)()
end)

if not success then
    warn("Error while loading UI script:", errorMsg)
end

-- Create main frame
local frame = Instance.new("Frame")
local yOffset = 10
local buttonHeight = 30
local buttonSpacing = 5
local totalHeight = 2 * yOffset + buttonHeight + buttonSpacing
local totalWidth = 230
frame.Size = UDim2.new(0, totalWidth, 0, totalHeight)
frame.Position = UDim2.new(1, -totalWidth, 0, 10)
frame.BackgroundTransparency = 0.5
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

-- Function to create toggle buttons
local function createToggleButton(text, toggleFunction, customCode)
    local button = Instance.new("TextButton")
    button.Text = text .. ": OFF"
    button.Size = UDim2.new(0, 180, 0, buttonHeight)
    button.Position = UDim2.new(0, 10, 0, yOffset)
    button.Parent = frame

    yOffset = yOffset + buttonHeight + buttonSpacing

    local isEnabled = false

    local function toggleButton()
        isEnabled = not isEnabled
        button.Text = text .. ": " .. (isEnabled and "ON" or "OFF")
        toggleFunction(isEnabled)

        if isEnabled and customCode then
            customCode()
        end
    end

    button.MouseButton1Click:Connect(toggleButton)
    return button
end

-- Toggle Damage Size Function
local function toggleDamageSize(isEnabled)
    if isEnabled then
        game.Workspace.Pit.Damage.Size = Vector3.new(42, 2000, 2000)
    else
        game.Workspace.Pit.Damage.Size = Vector3.new(0, 0, 0)
    end
end

createToggleButton("DED", toggleDamageSize)

-- Toggle Touch Function
local function toggleTouch(isEnabled)
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = not isEnabled
            v.CanTouch = not isEnabled
        end
    end
end

createToggleButton("TOUCH", toggleTouch)

-- Remove Ragdoll Function
local function removeRagdoll(isEnabled)
    if isEnabled then
        local LocalPlayer = game.Players.LocalPlayer
        if LocalPlayer.Character:FindFirstChild("ragdollValue") then
            LocalPlayer.Character.ragdollValue:Destroy()
        end
    end
end

createToggleButton("NoRagdoll", removeRagdoll)

-- Boost Touch Detector Size Function
local function boostTouchDetectorSize(isEnabled)
    local touchDetector = game:GetService("Workspace").Map.Cool.Boosts.Jump.touchDetector
    touchDetector.Size = isEnabled and Vector3.new(4000, 4000, 4000) or Vector3.new(1, 1, 1)
end

createToggleButton("BOOSTTOUCH", boostTouchDetectorSize)

-- Toggle Speed Script Function
local function toggleSpeedScript(isEnabled)
    local touchDetector = game:GetService("Workspace").Map.Cool.Boosts.Speed.touchDetector
    touchDetector.Size = isEnabled and Vector3.new(2000, 2000, 2000) or Vector3.new(1, 1, 1)
end

createToggleButton("GiveSpeed", toggleSpeedScript)

-- Grapple Length Button
local button6 = Instance.new("TextButton")
button6.Text = "GrappleLength: OFF"
button6.Size = UDim2.new(0, 180, 0, buttonHeight)
button6.Position = UDim2.new(0, 10, 0, yOffset)
button6.Parent = frame

local executingGrapple = false

button6.MouseButton1Click:Connect(function()
    executingGrapple = not executingGrapple
    button6.Text = "GrappleLength: " .. (executingGrapple and "ON" or "OFF")
end)

spawn(function()
    while true do
        wait(0.0001) -- Reduce the interval to 0.005 seconds for quicker adjustment
        if executingGrapple then
            local args = {
                [1] = -20  -- Adjust the value to 0.1 for faster adjustments
            }
            game:GetService("ReplicatedStorage").Events.Remote.Client.changeRopeLength:FireServer(unpack(args))
        end
    end
end)
